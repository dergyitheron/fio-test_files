#This test does random reads. Block size and queue depth can be changed on the settings bs="" and iodepth=""
#The test will bypass cache through direct=1, some filesystems do not support direct IO, se this to 0 if that's the case
#It will use 4 files and 4 jobs per file which will spawn a total of 16 jobs
#Reporting will be for the entire test instead of each job this is done through group_reporting=1
# rw= tells FIO what operation to perform and if it is sequential or random IO, options can be:
#read for sequential reads, write for sequentail writes, randread for random reads, randwrite for random reads
#randrw for a mix of random read and writes percentage can be controlled through rwmixread and rwmixwrite.4
[global]
name=read-nocache-random
rw=randread
group_reporting=1
bs=1M
direct=1
numjobs=4
time_based=1
runtime=180
iodepth=64
ioengine=libaio

[file1]
size=10G
filename=read-nocache-random.1

[file2]
size=10G
filename=read-nocache-random.2

[file3]
size=10G
filename=read-nocache-random.3

[file4]
size=10G
filename=read-nocache-random.4
